Developer Documentation

Install Apache
  Open a terminal window by selecting Accessories > Terminal from the menu.
	Install the apache2 package by typing the following command into the terminal and pressing Enter:

	sudo apt-get install apache2 -y
 
Install PHP
  Install the PHP package with the following command:
  
	sudo apt-get install php -y

Ensure you have the appropriate permissions in the new file location by typing the command below

	chmod 777 /var/www/html

Install the xml extension for php by typing the command below into the terminal

	sudo apt-get install php-xml 

Install MariaDB
	Install the MariaDB Server and PHP-MySQL packages by entering the following command into the terminal window:

	sudo apt-get install mariadb-server php-mysql -y

Restart Apache:

	sudo service apache2 restart

Download WordPress
	Change directory to /var/www/html/ and delete all the files in the folder.

	cd /var/www/html/
	sudo rm *
Download WordPress using wget.

	sudo wget https://wordpress.org/latest.tar.gz

Extract the WordPress tarball to get at the WordPress files.

	sudo tar xzf latest.tar.gz

Move the contents of the extracted wordpress directory to the current directory.

	sudo mv wordpress/* .

Tidy up by removing the tarball and the now empty wordpress directory.

	sudo rm -rf wordpress latest.tar.gz

This is the source of a default WordPress installation. The files you edit to customise your installation belong in the wp-content folder.
Now change the ownership of all these files to the Apache user:

	sudo chown -R www-data: .

Set up your WordPress Database
Set up MySQL/MariaDB
	To get your WordPress site set up, you need a database. This is where MySQL and MariaDB come in!
	Run the MySQL secure installation command in the terminal window.

	sudo mysql_secure_installation
You will be asked Enter current password for root (enter for none): — press Enter.

	Type in Y and press Enter to Set root password?.
	Type in a password at the New password: prompt, and press Enter. Important: remember this root password, as you will need it later to set up WordPress.
	Type in Y to Remove anonymous users.
	Type in Y to Disallow root login remotely.
	Type in Y to Remove test database and access to it.
	Type in Y to Reload privilege tables now.

	When complete, you will see the message All done! and Thanks for using MariaDB!.

Create the WordPress database
	Run mysql in the terminal window:

	sudo mysql -uroot -p
	
	Enter the root password you created.

You will be greeted by the message Welcome to the MariaDB monitor.
	Create the database for your WordPress installation at the MariaDB [(none)]> prompt using:

create database wordpress;
Note the semi-colon ending the statement.

If this has been successful, you should see this:
Query OK, 1 row affected (0.00 sec)
 
	Now grant database privileges to the root user. Note: you will need to enter your own password after IDENTIFIED BY.
	GRANT ALL PRIVILEGES ON wordpress.* TO 'root'@'localhost' IDENTIFIED BY 'YOURPASSWORD';
	For the changes to take effect, you will need to flush the database privileges:

FLUSH PRIVILEGES;

	Exit the MariaDB prompt with Ctrl + D.
	Restart your Raspberry Pi:

	sudo reboot

WordPress configuration
	Open the web browser on your Pi and goto https://localhost, you should see a WordPress page asking to pick your language.
 
	Select your language and click Continue.

You will be presented with the WordPress welcome screen.
 
	Click the Let’s go! button.

Now fill out the basic site information as follows:

Database Name:      wordpress
User Name:          root
Password:           <YOUR PASSWORD>
Database Host:      localhost
Table Prefix:       wp_

	Click Submit to proceed.
	Click the Run the install button.

Now you’re getting close!
 
Fill out the information: give your site a title, create a username and password, and enter your email address. Hit the Install WordPress button, then log in using the account you just created.
Now you’re logged in and have your site set up, you can see the website by visiting your https://localhost/wp-admin.
Log in to WordPress from another computer
Friendly permalinks

It’s recommended that you change your permalink settings to make your URLs more friendly.
To do this, log in to WordPress and go to the dashboard.

	Go to Setting, then Permalinks.
	Select the Post name option and click Save Changes.

Enable Apache’s rewrite mod:

	sudo a2enmod rewrite

You’ll also need to tell the virtual host serving the site to allow requests to be overwritten.

Edit the Apache configuration file for your virtual host:

	sudo mousepad /etc/apache2/sites-available/000-default.conf

Add the following lines after line 1.
	<Directory "/var/www/html">
	    AllowOverride All
	</Directory>
		Ensure it’s within the <VirtualHost *:80> like so:
	<VirtualHost *:80>
	    <Directory "/var/www/html">
	        AllowOverride All
	    </Directory>
	    ...
		Save the file and exit.
		Restart Apache.
	
	sudo service apache2 restart


Extracting the files for the weather app

If there is an issue with permission please change to Super User

Download the apache2.tar and html.tar file

Move and extract the apache2.tar in /etc directory by typing the command below into the terminal

	chmod 777 /etc
	cd /Downloads
	mv apache2.tar /etc
	cd /etc
	tar -xvf apache2.tar ./etc
	Then delete the tar file by type the command below into the terminal
	rm apache2.tar

Move and extract the html.tar in /var/www directory by typing the commands below into the terminal

	chmod 777 /etc
	cd  /Downloads
	mv html.tar /var/www/
	cd /var/www
	tar -xvf html.tar ./etc
	Then delete the tar file by type the command below into the terminal
	rm html.tar

WordPress now has everything needed to run the weather app, access it by typing in https://localhost into a web browser and enjoy


Sources: 
Build a LAMP Web Server with WordPress | Html-css-javascript | Coding projects for kids and teens (raspberrypi.org)
![image](https://github.com/user-attachments/assets/eeefaad3-0d53-4174-8f0e-8c394cfe0003)
